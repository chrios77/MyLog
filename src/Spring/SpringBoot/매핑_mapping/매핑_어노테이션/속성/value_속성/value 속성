# value 속성

### value 속성
value 속성은 @RequestMapping, @GetMapping, @PostMapping, @PutMapping, @DeleteMapping, @PatchMapping 등에서 사용할 수 있는 어노테이션이다.

### value 속성의 역할
value 속성은 요청 URL를 지정하는데 사용하며, value 속성은 path 속성과 동일한 작동을 한다.

예를 들어,
```java
@GetMapping(value = "/example")
public String getExample() {
    // 메서드 내용
}
```
처럼 사용한다.

### 요청 URL를 지정한다??
요청 URL를 지정한다는 것은 웹 브라우저, 모바일 앱 등의 클라이언트에서 서버로 HTTP 요청을 보낼 때 해당 요청이 어떤 경로(경로는 path라고도 한다.)에 대한 것인지 명시하는 것을 의미한다.

이 경로 정보는 서버가 요청을 올바르게 처리하기 위해 어떤 컨트롤러 혹은 컨트롤러 내의 메서드와 매핑되어야 하는지를 결정하는데 사용된다.

예를 들어, 웹 앱에 사용자 목록을 보여주는 페이지가 있고, 이 페이지를 조회하기 위한 URL이 "/user"라고 가정해보자. 클라이언트가 이 URL로 GET 요청을 보내면, 서버는 이 요청을 처리하기 위해 "/user" 경로에 매핑된 컨트롤러나 메서드를 찾는다.

### value 속성, path 속성을 생략하다.
Spring 프레임워크에서는 @GetMapping을 사용하여 어떤 메서드를 HTTP GET 요청에 대한 경로와 연결할 수 있다. 이 때 value 속성이나 path 속성에 경로를 지정함으로써, 해당 경로로 들어오는 요청이 엉떤 메서드에 의해 처리 될지를 정의한다.

보통 @GetMapping에서 URL을 지정할 때 value 속성이나 path 속성을 생략하여
```java
@GetMapping("/users")
```
처럼 사용할 수 있다.

### value 속성의 형식
value 속성의 형식은 문자열 배열로 기술된다. 또한, 하나 이상의 URL 경로를 지정할 수 있다. value 속성을 사용하여 여러 URL을 지정할 수도 있는데 이때는 {}를 사용한다.

```java
@GetMapping(value = {"/example", "/exampleAlias"})
public String getExample() {
    // 메서드 내용
}
```

### value 속성 사용 시 주의사항
value 속성 사용 시 주의할 점은 하나의 컨트롤러 내에서 같은 경로를 가진 중복 매핑은 허용되지 않는다는 점이다. 즉, 동일한 경로를 가진 두 메서드가 있는 경우, Spring은 애플리케이션 전체에서 경로가 유일하게 유지되어야 하는지, 컨텍스트 루트나 서블릿 매핑에 영향을 받는지 고려해야 한다.

value 속성을 통해, 개발자는 Spring 애플리케이션에서 HTTP 요청을 효과적으로 관리하고, 명확한 URL 경로 구조를 기술할 수 있다.

### 참고할 점
value 속성과 path 속성은 서로 하는 동작이 같아 value 속성을 사용해도 되고 path 속성을 사용해도 된다.